//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------


#include "CQ_NETMF_UTIL.h"
#include "CQ_NETMF_UTIL_CQ_NETMF_UTIL_EEHeap.h"

using namespace CQ::NETMF::UTIL;


HRESULT Library_CQ_NETMF_UTIL_CQ_NETMF_UTIL_EEHeap::EEHeap_get_top___STATIC__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 retVal = EEHeap::EEHeap_get_top( hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_UINT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_UTIL_CQ_NETMF_UTIL_EEHeap::EEHeap_get_size___STATIC__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 retVal = EEHeap::EEHeap_get_size( hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_UINT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_UTIL_CQ_NETMF_UTIL_EEHeap::EEHeap_get_next___STATIC__U4__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        UINT32 retVal = EEHeap::EEHeap_get_next( param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_UINT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_UTIL_CQ_NETMF_UTIL_EEHeap::EEHeap_get_prev___STATIC__U4__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        UINT32 retVal = EEHeap::EEHeap_get_prev( param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_UINT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_UTIL_CQ_NETMF_UTIL_EEHeap::EEHeap_get_last___STATIC__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 retVal = EEHeap::EEHeap_get_last( hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_UINT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_UTIL_CQ_NETMF_UTIL_EEHeap::EEHeap_get_hb_flags___STATIC__U4__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        UINT32 retVal = EEHeap::EEHeap_get_hb_flags( param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_UINT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_UTIL_CQ_NETMF_UTIL_EEHeap::EEHeap_get_hb_size___STATIC__U4__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        UINT32 retVal = EEHeap::EEHeap_get_hb_size( param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_UINT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_UTIL_CQ_NETMF_UTIL_EEHeap::EEHeap_get_hb_type___STATIC__U4__U4( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        UINT32 param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_UINT32( stack, 0, param0 ) );

        UINT32 retVal = EEHeap::EEHeap_get_hb_type( param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
        SetResult_UINT32( stack, retVal );

    }
    TINYCLR_NOCLEANUP();
}
