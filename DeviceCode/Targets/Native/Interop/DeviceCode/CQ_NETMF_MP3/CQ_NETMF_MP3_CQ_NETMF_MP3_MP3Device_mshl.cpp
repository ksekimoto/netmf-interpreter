//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------


#include "CQ_NETMF_MP3.h"
#include "CQ_NETMF_MP3_CQ_NETMF_MP3_MP3Device.h"

using namespace CQ::NETMF::MP3;


HRESULT Library_CQ_NETMF_MP3_CQ_NETMF_MP3_MP3Device::MP3Device_MP3_Initialize___STATIC__VOID( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        MP3Device::MP3Device_MP3_Initialize( hr );
        TINYCLR_CHECK_HRESULT( hr );
    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_MP3_CQ_NETMF_MP3_MP3Device::MP3Device_MP3_Play___STATIC__VOID__STRING( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        LPCSTR param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_LPCSTR( stack, 0, param0 ) );

        MP3Device::MP3Device_MP3_Play( param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_MP3_CQ_NETMF_MP3_MP3Device::MP3Device_MP3_Stop___STATIC__VOID__STRING( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        LPCSTR param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_LPCSTR( stack, 0, param0 ) );

        MP3Device::MP3Device_MP3_Stop( param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_MP3_CQ_NETMF_MP3_MP3Device::MP3Device_MP3_Pause___STATIC__VOID__STRING( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        LPCSTR param0;
        TINYCLR_CHECK_HRESULT( Interop_Marshal_LPCSTR( stack, 0, param0 ) );

        MP3Device::MP3Device_MP3_Pause( param0, hr );
        TINYCLR_CHECK_HRESULT( hr );
    }
    TINYCLR_NOCLEANUP();
}

HRESULT Library_CQ_NETMF_MP3_CQ_NETMF_MP3_MP3Device::MP3Device_MP3_Uninitialize___STATIC__VOID( CLR_RT_StackFrame& stack )
{
    TINYCLR_HEADER(); hr = S_OK;
    {
        MP3Device::MP3Device_MP3_Uninitialize( hr );
        TINYCLR_CHECK_HRESULT( hr );
    }
    TINYCLR_NOCLEANUP();
}
